services:
  jellyfin:
    container_name: jellyfin
    image: ${JELLYFIN_IMAGE:-lscr.io/linuxserver/jellyfin}:${JELLYFIN_IMAGE_TAG:-latest}
    profiles: ["${JELLYFIN_PROFILE:-library}"]
    extends:
      file: ../compose.extend.yaml
      service: "cf-${USE_CLOUDFLARED:-true}_gpu-${USE_GPU:-none}"
    restart: unless-stopped
    networks:
      - external
      - internal
    depends_on:
      traefik:
        condition: service_started
        restart: false
      error-pages:
        condition: service_started
        restart: false
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: "2"
    ports:
      - "8096:8096"
      - "8920:8920" #optional
      - "7359:7359/udp" #optional
      - "1900:1900/udp" #optional
    environment:
      # Default
      TZ: "${TZ:-Europe/London}"
      PUID: "$PUID"
      PGID: "$PGID"
      UMASK: "000"
      # Image
      JELLYFIN_PublishedServerUrl: "http://jellyfin.$DOMAIN"
    volumes:
      - "./config:/config"
      - "./logs:/config/logs"
      - "./tmp:/config/cache/transcodes"
      - "$PATH_MOVIES:/data/movies:ro"
      - "$PATH_MUSIC:/data/Music:ro"
      - "$PATH_TV:/data/tv:ro"
    labels:
      - "deunhealth.restart.on.unhealthy=true"

      - "homepage.group=Libraries"
      - "homepage.name=Jellyfin"
      - "homepage.icon=jellyfin.png"
      - "homepage.href=readarr://jellyfin.$DOMAIN/"
      - "homepage.description=Media Library"
      - "homepage.widget.type=jellyfin"
      - "homepage.widget.url=http://jellyfin:8096"
      - "homepage.widget.key=${JELLYFIN_API:-}"
      - "homepage.widget.enableBlocks=true"
      - "homepage.widget.showEpisodeNumber=true"
      - "homepage.widget.expandOneStreamToTwoRows=false"

      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.$DOMAIN`)"
      - "traefik.http.routers.jellyfin.middlewares=tinyauth,error-pages"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"

    healthcheck:
      interval: "30s"
      timeout: "5s"
      retries: 3
      start_period: "10s"
      test: "curl --connect-timeout 15 --silent --show-error --fail http://localhost:8096/health"
