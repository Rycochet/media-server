services:
  traefik:
    container_name: traefik
    image: traefik:v3.4.4
    profiles: ["${PROFILE_TRAEFIK:-network}"]
    restart: unless-stopped
    networks:
      external:
      internal:
        aliases:
          - "jellyfin.$DOMAIN"
          - "plex.$DOMAIN"
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "3"
    depends_on:
      socket-proxy:
        condition: service_healthy
        restart: false
      tinyauth:
        condition: service_started
        restart: false
      error-pages:
        condition: service_started
        restart: false
      cloudflared:
        condition: service_started
        restart: false
    environment:
      # Default
      TZ: "Europe/London"
      PUID: "$PUID"
      PGID: "$PGID"
      UMASK: "000"
      # Cloudflare
      CF_DNS_API_TOKEN: "${CLOUDFLARE_API}"
      # Image
      # GODEBUG: "http2xconnect=0"
    command:
      # - "--accesslog=true"
      # - "--accesslog.addinternals"
      - "--api.dashboard=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.propagation.delayBeforeChecks=10"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=8.8.8.8:53"
      - "--certificatesResolvers.letsencrypt.acme.email=$EMAIL"
      - "--certificatesResolvers.letsencrypt.acme.storage=/etc/traefik/acme.json"
      - "--entryPoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.websecure.http.tls.certresolver=letsencrypt"
      - "--entryPoints.websecure.http2.maxConcurrentStreams=250"
      - "--entryPoints.websecure.http3=true"
      - "--log.level=INFO"
      # - "--metrics.addinternals"
      # - "--metrics.prometheus=true"
      - "--ping"
      - "--providers.docker.endpoint=tcp://socket-proxy:2375"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=internal"
      - "--providers.docker=true"
      - "--providers.file.filename=/etc/traefik/rules.yml"
      - "--providers.file.watch=true"
      - "--providers.file=true"
      - "--serverstransport.insecureskipverify=true"
      # Copy the whole "command:" section to compose.override.yaml and add extra domains as needed
      - "--entryPoints.websecure.http.tls.domains[0].main=$DOMAIN"
      - "--entryPoints.websecure.http.tls.domains[0].sans=*.$DOMAIN"
      # - "--entryPoints.websecure.http.tls.domains[1].main=other.com"
      # - "--entryPoints.websecure.http.tls.domains[1].sans=*.other.com"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./.ssl/key.pem:/run/secrets/key.pem:ro"
      - "./.ssl/cert.pem:/run/secrets/cert.pem:ro"
      - "./config:/etc/traefik"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.$DOMAIN`)"
      - "traefik.http.routers.dashboard.middlewares=traefik,tinyauth,error-pages"
      - "traefik.http.services.dashboard.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.traefik.headers.accessControlAllowCredentials=true"
      - "traefik.http.middlewares.traefik.headers.accessControlAllowOriginList=https://$DOMAIN"
    healthcheck:
      interval: "30s"
      timeout: "5s"
      retries: 3
      start_period: "10s"
      test: "traefik healthcheck --ping"
