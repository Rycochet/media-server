services:
  tdarr:
    container_name: tdarr
    image: ${TDARR_IMAGE:-haveagitgat/tdarr}:${TDARR_IMAGE_TAG:-latest}
    profiles: ["${TDARR_PROFILE:-quality}"]
    extends:
      file: ../compose.extend.yaml
      service: "gpu-${USE_GPU:-none}"
    restart: unless-stopped
    networks:
      - external
      - internal
    ports:
      - "8266:8266" # server port
    depends_on:
      traefik:
        condition: service_started
        restart: false
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "3"
    environment:
      # Default
      TZ: "${TZ:-Europe/London}"
      PUID: "$PUID"
      PGID: "$PGID"
      UMASK: "000"
      # Image
      # serverIP: "0.0.0.0"
      # serverPort: "8266"
      # webUIPort: "8265"
      UMASK_SET: "000"
      internalNode: "true"
      inContainer: "true"
      nodeName: "Server"
      transcodegpuWorkers: "0"
      transcodecpuWorkers: "0"
      healthcheckgpuWorkers: "0"
      healthcheckcpuWorkers: "2"
    volumes:
      - "./config/server:/app/server"
      - "./config/config:/app/configs"
      - "./logs:/app/logs"
      - "./tmp:/tmp"
      - "$PATH_MOVIES:/data/movies"
      - "$PATH_TV:/data/tv"
    labels:
      - "com.centurylinklabs.watchtower.monitor-only=true"

      - "deunhealth.restart.on.unhealthy=false"

      - "homepage.group=Media"
      - "homepage.name=Tdarr"
      - "homepage.icon=tdarr.png"
      - "homepage.href=https://tdarr.$DOMAIN/"
      - "homepage.description=Video transcoding"
      - "homepage.widget.type=tdarr"
      - "homepage.widget.url=http://tdarr:8265"

      - "traefik.enable=true"
      - "traefik.http.routers.tdarr.rule=Host(`tdarr.$DOMAIN`)"
      - "traefik.http.routers.tdarr.middlewares=tdarr,tinyauth,error-pages"
      - "traefik.http.services.tdarr.loadbalancer.server.port=8265"
      - "traefik.http.middlewares.tdarr.headers.accessControlAllowCredentials=true"
      - "traefik.http.middlewares.tdarr.headers.accessControlAllowHeaders=content-type"
      - "traefik.http.middlewares.tdarr.headers.accessControlAllowOriginList=https://$DOMAIN"

    healthcheck:
      interval: "30s"
      timeout: "5s"
      retries: 3
      start_period: "10s"
      test: "curl --connect-timeout 15 --silent --show-error --fail http://localhost:8265/"

  tdarr-node:
    container_name: tdarr-node
    image: ${TDARR_NODE_IMAGE:-haveagitgat/tdarr_node}:${TDARR_NODE_IMAGE_TAG:-latest}
    profiles: ["${TDARR_NODE_PROFILE:-quality}"]
    extends:
      file: ../compose.extend.yaml
      service: "gpu-${USE_GPU:-none}"
    restart: unless-stopped
    network_mode: service:tdarr
    depends_on:
      tdarr:
        condition: service_started
        restart: true
    environment:
      # Default
      TZ: "${TZ:-Europe/London}"
      PUID: "$PUID"
      PGID: "$PGID"
      UMASK: "000"
      # Image
      inContainer: "true"
      nodeName: "Server-Node"
      # nodePort: "8267"
      nodeType: "mapped"
      # serverURL: "http://127.0.0.1:8266"
      transcodegpuWorkers: "2"
      transcodecpuWorkers: "0"
      healthcheckgpuWorkers: "0"
      healthcheckcpuWorkers: "0"
      UMASK_SET: "000"
    volumes:
      - "./config/config:/app/configs"
      - "./logs:/app/logs"
      - "./tmp:/tmp"
      - "$PATH_MOVIES:/data/movies"
      - "$PATH_TV:/data/tv"
    labels:
      - "com.centurylinklabs.watchtower.monitor-only=true"
      - "deunhealth.restart.on.unhealthy=false"
